name: Security CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-scan:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout repository
      - name: Checkout
        uses: actions/checkout@v4

      # 2️⃣ Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t websec-app:latest .

      # 4️⃣ Run container on port 8081
      - name: Run container
        run: |
          docker run -d --name websec-test -p 8085:8085 websec-app:latest
          for i in {1..20}; do
            if curl -sSf http://localhost:8085 >/dev/null 2>&1; then
              echo "Server is up"; break
            fi
            echo "Waiting for server..."; sleep 2
          done

      # 5️⃣ Install Trivy
      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh

      # 6️⃣ Trivy image scan
      - name: Trivy image scan (JSON)
        run: |
          trivy image --format json --output trivy-report.json --severity HIGH,CRITICAL websec-app:latest || true

      # 7️⃣ Run OWASP ZAP full scan
      - name: Run OWASP ZAP Full Scan
        run: |
          mkdir -p zap_reports
          docker run --rm \
          -v "${PWD}/zap_reports:/zap/wrk:rw" \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-full-scan.py \
          -t https://example.com \
          -r zap_report.html \
          -z "-config api.disablekey=true" \
          -d


      # 8️⃣ Upload scan artifacts
      - name: Upload scan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scan-artifacts
          path: |
            trivy-report.json
            zap_reports/zap_report.html

      # 9️⃣ Run remediation gate (fail if criticals)
      - name: Run remediation gate
        run: python3 scripts/remediation_gate.py
